<<<<<<< HEAD
hi how are u this is git final exam in class exam.
<<<<<<< HEAD
<<<<<<< HEAD

getting updated from the remote repository 
=======
>>>>>>> 34790b3... committed
=======
>>>>>>> 34790b3... committed
=======
sandeeps-MacBook-Pro:~ sandeepyarlagadda$ git init git_final
Initialized empty Git repository in /Users/sandeepyarlagadda/git_final/.git/
sandeeps-MacBook-Pro:~ sandeepyarlagadda$ cd git_final
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ vi finalexam.txt
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git add --all
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git commit -m 'final examination'
[master (root-commit) 188d469] final examination
 1 file changed, 1 insertion(+)
 create mode 100644 finalexam.txt
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ vi finalexam.txt
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   finalexam.txt

no changes added to commit (use "git add" and/or "git commit -a")
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git add --all
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git commit -m 'committed'
[master a8ec79b] committed
 1 file changed, 1 insertion(+), 1 deletion(-)
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ ls
finalexam.txt
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git diff
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git diff 188d469 a8ec79b
diff --git a/finalexam.txt b/finalexam.txt
index 6258967..8e7909c 100644
--- a/finalexam.txt
+++ b/finalexam.txt
@@ -1 +1 @@
-hi this is our final exam
+hi this is our final exam in the class
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git reset hard
fatal: ambiguous argument 'hard': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git reset --hard
HEAD is now at a8ec79b committed
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ vi finalexam.txt
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ vi finalexam.txt
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git checkout branch
error: pathspec 'branch' did not match any file(s) known to git.
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git branch branching
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git checkout branching
Switched to branch 'branching'
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ ls
finalexam.txt
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ vi finalexam.txt
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git add --all
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git commit -m 'committing on the branch'
[branching d825d01] committing on the branch
 1 file changed, 1 insertion(+), 1 deletion(-)
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git branch
* branching
  master
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git branch branch2
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git checkout branch2
Switched to branch 'branch2'
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git branch
* branch2
  branching
  master
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git diff branching..branch2
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git diff branching...branch2
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ vi finalexam.txt
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git checkout master
Switched to branch 'master'
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git rm branch2
fatal: pathspec 'branch2' did not match any files
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git branch -d branch2
error: The branch 'branch2' is not fully merged.
If you are sure you want to delete it, run 'git branch -D branch2'.
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git merge branch2
Updating a8ec79b..d825d01
Fast-forward
 finalexam.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ branch -d branch2
-bash: branch: command not found
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git branch -d branch2
Deleted branch branch2 (was d825d01).
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git push https://github.com/golfolks/git_final.git
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream https://github.com/golfolks/git_final.git master

sandeeps-MacBook-Pro:git_final sandeepyarlagadda$  git push --set-upstream https://github.com/golfolks/git_final.git master
To https://github.com/golfolks/git_final.git
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/golfolks/git_final.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git merge  git push --set-upstream https://github.com/golfolks/git_final.git master
error: unknown option `set-upstream'
usage: git merge [<options>] [<commit>...]
   or: git merge [<options>] <msg> HEAD <commit>
   or: git merge --abort

    -n                    do not show a diffstat at the end of the merge
    --stat                show a diffstat at the end of the merge
    --summary             (synonym to --stat)
    --log[=<n>]           add (at most <n>) entries from shortlog to merge commit message
    --squash              create a single commit instead of doing a merge
    --commit              perform a commit if the merge succeeds (default)
    -e, --edit            edit message before committing
    --ff                  allow fast-forward (default)
    --ff-only             abort if fast-forward is not possible
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --verify-signatures   Verify that the named commit has a valid GPG signature
    -s, --strategy <strategy>
                          merge strategy to use
    -X, --strategy-option <option=value>
                          option for selected merge strategy
    -m, --message <message>
                          merge commit message (for a non-fast-forward merge)
    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --abort               abort the current in-progress merge
    --progress            force progress reporting
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit
    --overwrite-ignore    update ignored files (default)

sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git merge  git push --set-upstream https://github.com/golfolks/gi
error: unknown option `set-upstream'
usage: git merge [<options>] [<commit>...]
   or: git merge [<options>] <msg> HEAD <commit>
   or: git merge --abort

    -n                    do not show a diffstat at the end of the merge
    --stat                show a diffstat at the end of the merge
    --summary             (synonym to --stat)
    --log[=<n>]           add (at most <n>) entries from shortlog to merge commit message
    --squash              create a single commit instead of doing a merge
    --commit              perform a commit if the merge succeeds (default)
    -e, --edit            edit message before committing
    --ff                  allow fast-forward (default)
    --ff-only             abort if fast-forward is not possible
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --verify-signatures   Verify that the named commit has a valid GPG signature
    -s, --strategy <strategy>
                          merge strategy to use
    -X, --strategy-option <option=value>
                          option for selected merge strategy
    -m, --message <message>
                          merge commit message (for a non-fast-forward merge)
    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --abort               abort the current in-progress merge
    --progress            force progress reporting
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit
    --overwrite-ignore    update ignored files (default)

sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git merge https://github.com/golfolks/git_final.git
merge: https://github.com/golfolks/git_final.git - not something we can merge
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git pull https://github.com/golfolks/git_final.git
warning: no common commits
remote: Counting objects: 21, done.
remote: Compressing objects: 100% (15/15), done.
remote: Total 21 (delta 3), reused 18 (delta 2), pack-reused 0
Unpacking objects: 100% (21/21), done.
From https://github.com/golfolks/git_final
 * branch            HEAD       -> FETCH_HEAD
Merge made by the 'recursive' strategy.
 gitfinal.txt | 4 ++++
 rough1.txt   | 1 +
 2 files changed, 5 insertions(+)
 create mode 100644 gitfinal.txt
 create mode 100644 rough1.txt
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git merge https://github.com/golfolks/git_final.git
merge: https://github.com/golfolks/git_final.git - not something we can merge
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ git clone https://github.com/golfolks/git_final.git
Cloning into 'git_final'...
remote: Counting objects: 21, done.
remote: Compressing objects: 100% (15/15), done.
remote: Total 21 (delta 3), reused 18 (delta 2), pack-reused 0
Unpacking objects: 100% (21/21), done.
Checking connectivity... done.
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ ls
finalexam.txt	git_final	gitfinal.txt	rough1.txt
sandeeps-MacBook-Pro:git_final sandeepyarlagadda$ 
>>>>>>> e332625d81b8311607ada9d91b621f329d422cde

